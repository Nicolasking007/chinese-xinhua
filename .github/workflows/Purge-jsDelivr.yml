name: Purge jsDelivr Cache

on:
  push:
    branches:
      - master
    paths:
      - 'data/**'

jobs:
  purge-jsdelivr-cache:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout master
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Setup Git
        run: |
          sudo apt-get install git -y
          git --version  # 输出 Git 版本以确认是否安装成功

      - name: Determine Changed Files
        id: changed_files
        run: |
          git fetch origin master
          git diff --name-only origin/master HEAD > diff_output.txt
          cat diff_output.txt  # 输出 git diff 结果以进行调试
          grep '^data/' diff_output.txt > changed_files.txt
          if [ -s changed_files.txt ]; then
            echo "Changed files found:"
            cat changed_files.txt
            echo "changed_files=$(cat changed_files.txt)" >> $GITHUB_ENV
          else
            echo "No changed files found."
            echo "changed_files=" >> $GITHUB_ENV
          fi

      - name: Output Changed Files
        run: |
          echo "Changed files: ${{ env.changed_files }}"

      - name: Determine CDN URLs to Purge
        if: env.changed_files != ''
        id: purge_urls
        run: |
          baseUrl="https://cdn.jsdelivr.net/gh/${{ github.repository }}@latest"
          urls=""
          for f in $(cat changed_files.txt); do
            urls+="${baseUrl}/${f},"
          done
          echo "urls=${urls%,*}" >> $GITHUB_OUTPUT

      - name: Output CDN URLs
        if: env.changed_files != ''
        run: |
          echo "CDN URLs to purge: ${{ steps.purge_urls.outputs.urls }}"

      - name: Purge CDN Caches
        if: env.changed_files != ''
        uses: egad13/purge-jsdelivr-cache@v1
        with:
          url: ${{ steps.purge_urls.outputs.urls }}
          token: ${{ secrets.JSDELIVR_TOKEN }}
